name: Integration tests (CodeBuild)

# We use environments to require approval to run integration tests on PRs, but not on pushes to
# `main` (which have been approved already since PRs are required for `main`).
on:
  workflow_call:
    inputs:
      environment:
        type: string
      ref:
        required: true
        type: string

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  S3_BUCKET_NAME: tadiwaom-mountpoint-test
  S3_EXPRESS_ONE_ZONE_BUCKET_NAME: tadiwaom-mountpoint-test
  # Optional endpoint urls, can be empty
  S3_ENDPOINT_URL: ""
  S3_EXPRESS_ONE_ZONE_ENDPOINT_URL: ""
  S3_REGION: eu-west-1
  S3_BUCKET_TEST_PREFIX: codebuild-tests/run-${{ github.run_id }}-${{ github.run_attempt }}/
  # A bucket our IAM role has no access to, but is in the right region, for permissions tests
  S3_FORBIDDEN_BUCKET_NAME: enanmag-test-bucket-us-west-2
  # An IAM role that tests can assume when they want to create session policies
  S3_SUBSESSION_IAM_ROLE: S3AccessRole-Mountpoint
  # Different Access Points Aliases and ARNs
  S3_ACCESS_POINT_ALIAS: ""
  S3_ACCESS_POINT_ARN: ""
  S3_OLAP_ALIAS: ""
  S3_OLAP_ARN: ""
  S3_MRAP_ARN: ""
  S3_BUCKET_OWNER: 044529652743
  S3_EXPRESS_ONE_ZONE_BUCKET_NAME_EXTERNAL: ""
  KMS_TEST_KEY_ID: ""
  S3_EXPRESS_ONE_ZONE_BUCKET_NAME_SSE_KMS: ""
  RUST_FEATURES: fuse_tests,s3_tests,fips_tests,event_log,second_account_tests,manifest
  FUSE_VERSION: 2

permissions:
  id-token: write
  contents: read

jobs:
  test:
    name: Tests (FUSE ${{ matrix.fuseVersion }}, ${{ matrix.os }})
    # Using CodeBuild runners with custom parameters
    runs-on:
      - codebuild-mountpoint-tests-${{ github.run_id }}-${{ github.run_attempt }}
        image:${{ matrix.image }}
        instance-size:${{ matrix.size }}
        fleet:${{ matrix.image == 'arm:3.0' && 'mountpoint-test-fleet-arm' || 'mountpoint-test-fleet' }}
        buildspec-override:true

    environment: ${{ inputs.environment }}

    strategy:
      fail-fast: false
      matrix:
        include:
          # Ubuntu x86 with FUSE 2
          - image: ubuntu:6.0
            size: medium
            os: "Ubuntu x86"
            fuseVersion: 2
          
          # Ubuntu x86 with FUSE 3
          - image: ubuntu:6.0
            size: medium
            os: "Ubuntu x86"
            fuseVersion: 3
          
          # Amazon Linux arm with FUSE 2
          - image: arm:3.0
            size: large
            os: "Amazon Linux arm"
            fuseVersion: 2
          
          # Amazon Linux arm with FUSE 3 is excluded since FUSE 3 is not available on Amazon Linux 2

    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ vars.ACTIONS_IAM_ROLE }}
        aws-region: eu-west-1
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.ref }}
        submodules: true
        persist-credentials: false
    - name: Set up Rust toolchain
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        # setup-rust-toolchain sets "-D warnings" by default, and Rust treats any warning as compile error.
        # We need to this currently because `mountpoint-s3-fuser` contains some warnings and it breaks the build.
        rustflags: ""
    - name: Install operating system dependencies
      uses: ./.github/actions/install-dependencies
      with:
        fuseVersion: ${{ matrix.fuseVersion }}
    - name: Build tests
      run: cargo test --features $RUST_FEATURES --no-run
    - name: Run tests
      run: cargo test --features $RUST_FEATURES
    - name: Save dump files
      if: ${{ failure() && matrix.os == 'Amazon Linux arm' }}
      run: ./.github/actions/scripts/save-coredump.sh

  s3express-test:
    name: S3 Express One Zone tests (FUSE ${{ matrix.fuseVersion }}, ${{ matrix.os }})
    runs-on:
      - codebuild-mountpoint-express-${{ github.run_id }}-${{ github.run_attempt }}
        image:${{ matrix.image }}
        instance-size:${{ matrix.size }}
        fleet:${{ matrix.image == 'arm:3.0' && 'mountpoint-test-fleet-arm' || 'mountpoint-test-fleet' }}
        buildspec-override:true

    environment: ${{ inputs.environment }}

    strategy:
      fail-fast: false
      matrix:
        include:
          # Ubuntu x86 with FUSE 2
          - image: ubuntu:6.0
            size: medium
            os: "Ubuntu x86"
            fuseVersion: 2
          
          # Ubuntu x86 with FUSE 3
          - image: ubuntu:6.0
            size: medium
            os: "Ubuntu x86"
            fuseVersion: 3
          
          # Amazon Linux arm with FUSE 2
          - image: arm:3.0
            size: large
            os: "Amazon Linux arm"
            fuseVersion: 2
          
          # Amazon Linux arm with FUSE 3 is excluded since FUSE 3 is not available on Amazon Linux 2

    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ vars.ACTIONS_IAM_ROLE }}
        aws-region: eu-west-1
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.ref }}
        submodules: true
        persist-credentials: false
    - name: Set up Rust toolchain
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        # setup-rust-toolchain sets "-D warnings" by default, and Rust treats any warning as compile error.
        # We need to this currently because `mountpoint-s3-fuser` contains some warnings and it breaks the build.
        rustflags: ""
    - name: Install operating system dependencies
      uses: ./.github/actions/install-dependencies
      with:
        fuseVersion: ${{ matrix.fuseVersion }}
    - name: Build tests
      run: cargo test --features '${{ env.RUST_FEATURES }},s3express_tests' --no-run
    - name: Run tests
      run: cargo test --features '${{ env.RUST_FEATURES }},s3express_tests'
    - name: Save dump files
      if: ${{ failure() && matrix.os == 'Amazon Linux arm' }}
      run: ./.github/actions/scripts/save-coredump.sh

  fstab:
    name: fstab tests (${{ matrix.os }})
    runs-on:
      - codebuild-mountpoint-fstab-${{ github.run_id }}-${{ github.run_attempt }}
        image:${{ matrix.image }}
        instance-size:${{ matrix.size }}
        fleet:${{ matrix.image == 'arm:3.0' && 'mountpoint-test-fleet-arm' || 'mountpoint-test-fleet' }}
        buildspec-override:true

    environment: ${{ inputs.environment }}

    strategy:
      fail-fast: false
      matrix:
        include:
          # Ubuntu x86 with FUSE 2
          - image: ubuntu:6.0
            size: medium
            os: "Ubuntu x86"
            fuseVersion: 2
          
          # Amazon Linux arm with FUSE 2
          - image: arm:3.0
            size: large
            os: "Amazon Linux arm"
            fuseVersion: 2

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.ACTIONS_IAM_ROLE }}
          aws-region: eu-west-1
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
          submodules: true
          persist-credentials: false
      - name: Set up Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          # setup-rust-toolchain sets "-D warnings" by default, and Rust treats any warning as compile error.
          # We need to this currently because `mountpoint-s3-fuser` contains some warnings and it breaks the build.
          rustflags: ""
      - name: Install operating system dependencies
        uses: ./.github/actions/install-dependencies
        with:
          fuseVersion: ${{ matrix.fuseVersion }}
      - name: Create aws profile
        # Run the aws configuration as root, as fstab runs Mountpoint as root by default.
        run: |
          sudo aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          sudo aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          sudo aws configure set aws_session_token $AWS_SESSION_TOKEN
      - name: Run fstab integration tests
        run: ./mountpoint-s3/tests/fstab/basic_checks.sh

  asan:
    name: Address sanitizer
    runs-on:
      - codebuild-mountpoint-asan-${{ github.run_id }}-${{ github.run_attempt }}
        image:arm:3.0
        instance-size:large
        fleet:mountpoint-test-fleet-arm
        buildspec-override:true

    environment: ${{ inputs.environment }}

    env:
      # We're using ASan to test our CRT bindings, so focus only on S3, not on FUSE
      RUST_FEATURES: s3_tests,fips_tests

    timeout-minutes: 30

    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ vars.ACTIONS_IAM_ROLE }}
        aws-region: eu-west-1
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.ref }}
        submodules: true
    - name: Set up Rust toolchain
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        # setup-rust-toolchain sets "-D warnings" by default, and Rust treats any warning as compile error.
        # We need to this currently because `mountpoint-s3-fuser` contains some warnings and it breaks the build.
        rustflags: ""
        components: rust-src
    - name: Install operating system dependencies
      uses: ./.github/actions/install-dependencies
      with:
        fuseVersion: 3
        llvm: true
    - name: Validate ASan is working
      run: make test-asan-working
    - name: Run tests
      run: make test-asan
    - name: Save dump files
      if: ${{ failure() }}
      run: ./.github/actions/scripts/save-coredump.sh
